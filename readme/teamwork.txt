查看远程库的信息，用git remote,用git remote -v显示更详细的信息
[获得远程仓库地址，origin  git@github.com:michaelliao/learngit.git (push)]

推送分支
要指定本地分支，Git就会把该分支推送到远程库对应的远程分支上
推送本地的master分支  $ git push origin master
推送本地的dev分支  $ git push origin dev

抓取分支
把ssh key添加到github后开始克隆项目
$ git clone git@github.com:michaelliao/learngit.git
从远程库clone时，默认情况下，只能看到本地的master分支
要在dev分支上开发，就必须创建远程origin的dev分支到本地
$ git checkout -b dev origin/dev [在本地创建与远程相应的dev分支]

在dev上继续修改，然后，时不时地把dev分支push到远程
$ git push origin dev [push 本地的dev分支]

先用git pull把最新的提交从origin/dev抓下来，然后，在本地合并，解决冲突，再推送


先指定本地dev分支与远程origin/dev分支的连接 [不指定连接，拉pull不下来]
$ git branch --set-upstream dev origin/dev [ git pull提示“no tracking information”，则说明本地分支和远程分支的链接关系没有创建 ]
然后 $ git pull,然后
$ git commit -m "merge & fix hello.py"
$ git push origin dev [ 向远程 push  ]